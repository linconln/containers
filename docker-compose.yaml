name: ada

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
#  environment:
#    MINIO_ROOT_USER: minioadmin
#    MINIO_ROOT_PASSWORD: senha
#    MINIO_BROWSER_REDIRECT_URL: "https://192.168.19.38"
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s
    retries: 5

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  app:
    build:
      context: app/
      dockerfile: dockerfile
    entrypoint:
      - python3
      - producer.py
# substituir com o 
    environment:
      - SERVER_NAME=192.168.19.100
    depends_on:
      - rabbit
      - redis
      - nginx
    restart: on-failure

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
  
  nginx:
    image: nginx:1.19.2-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  rabbit:
    image: rabbitmq:3.8.5-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - 'rabbit-data:/var/lib/rabbitmq/mnesia/'

  redis:
    image: redis:latest
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
    command: [
        "redis-server",
        "--appendonly",
        "yes",
        "--port",
        "6379"
      ]
    volumes:
      - redis-data:/data

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  rabbit-data:
  redis-data:

networks:
  projeto: